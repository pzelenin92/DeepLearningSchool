{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOQV8ZFLEm3+pG/Vwoi4bUz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"fJRHldt-48ZN"},"outputs":[],"source":["_base_ = [\n","    '../_base_/models/ssd300.py', '../_base_/datasets/wider_face_ds.py',\n","    '../_base_/default_runtime.py'\n","]\n","model = dict(bbox_head=dict(num_classes=1))\n","# optimizer\n","# optimizer = dict(type='SGD', lr=0.012, momentum=0.9, weight_decay=5e-4)\n","optimizer = dict(type='SGD', lr=0.0025, momentum=0.9, weight_decay=5e-4)\n","\n","optimizer_config = dict()\n","# learning policy\n","lr_config = dict(\n","    policy='step',\n","    warmup='linear',\n","    warmup_iters=1000,\n","    warmup_ratio=0.001,\n","    step=[16, 20])\n","# runtime settings\n","runner = dict(type='EpochBasedRunner', max_epochs=17)\n","# log_config = dict(interval=1)\n","log_config = dict(\n","    interval=1,\n","    hooks=[dict(type='TextLoggerHook'),\n","           dict(type='TensorboardLoggerHook')])\n","\n","#my added\n","# from mmdet.apis import set_random_seed\n","\n","#1) dataset settings\n","# data_root = '/content/mmdetection/data/WIDERFace/'\n","# data.train.dataset.ann_file = '/content/mmdetection/data/WIDERFace/train.txt'\n","# data.train.dataset.img_prefix= '/content/mmdetection/data/WIDERFace/WIDER_train'\n","# # Чтобы  Repeated dataset повторялся 1 раз\n","# data.train.times = 1\n","# data = dict(\n","#     train=dict(\n","#         times=1,\n","#         dataset=dict(\n","#             ann_file='/content/mmdetection/data/WIDERFace/train.txt',\n","#             img_prefix= '/content/mmdetection/data/WIDERFace/WIDER_train'\n","#         )\n","#     )\n","# )\n","# data.val.ann_file = '/content/mmdetection/data/WIDERFace/val.txt'\n","# data.val.img_prefix= '/content/mmdetection/data/WIDERFace/WIDER_val'\n","# data = dict(\n","#     val=dict(\n","#         ann_file='/content/mmdetection/data/WIDERFace/train.txt',\n","#         img_prefix= '/content/mmdetection/data/WIDERFace/WIDER_train'\n","#         )\n","#     )\n","\n","#3) schedule_1x\n","# optimizer.lr = 0.02 / 8\n","# runner.max_epochs = 17\n","\n","#4) default_runtime\n","# If we need to finetune a model based on a pre-trained detector, we need to\n","# use load_from to set the path of checkpoints.\n","# cfg.load_from = checkpoint_file\n","\n","# продолжу обучение с 10й эпохи\n","# resume_from = checkpoint_file\n","\n","\n","# We can also use tensorboard to log the training process\n","# log_config.hooks = [\n","#     dict(type='TextLoggerHook'),\n","#     dict(type='TensorboardLoggerHook')]\n","\n","# добавить в конфиг датасета wider_faces.py:\n","# evaluation = dict(interval=1, metric='mAP')\n","\n","# оставить одну метрику иначе ошибка\n","\n","# только такие метрики иначе ошибка\n","# allowed_metrics = ['mAP', 'recall']\n","\n","# иначе ошибка :AttributeError: 'ConfigDict' object has no attribute 'evaluation'\n","# если добавлять то что ниже:\n","# # Change the evaluation metric since we use customized dataset.\n","# cfg.evaluation.metric = 'mAP'\n","# # We can set the evaluation interval to reduce the evaluation times\n","# cfg.evaluation.interval = 1\n","# # We can set the checkpoint saving interval to reduce the storage cost\n","\n","# cfg.checkpoint_config.interval = 1 # вроде есть\n","\n","# Set seed thus the results are more reproducible\n","# seed = 0\n","# set_random_seed(0, deterministic=False)\n","device = 'cuda'\n","gpu_ids = range(1)\n","\n","# Set up working dir to save files and logs.\n","work_dir = '/content/drive/MyDrive/Colab Notebooks/DLS Базовый поток/13.Проект/results/Train_3'"]}]}